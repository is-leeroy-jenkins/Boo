[project]
name = "boo"
version = "0.6.0"
requires-python = ">=3.10"
dependencies = [
  "openai>=1.0.0",
  "pydantic>=1.10,<3",
]
[project.optional-dependencies]
dev = ["ruff", "black", "mypy", "types-requests"]

# ----- Black -----
[tool.black]
line-length = 100
target-version = ["py310"]
skip-string-normalization = true

# ----- Ruff (lint + import sort + formatter if you prefer) -----
[tool.ruff]
line-length = 100
target-version = "py310"
# Start sensible; you can tighten later.
select = ["E","F","W","I","N","UP","B","A"]  # pycodestyle, pyflakes, isort, pep8-naming, modernize, bugbear, builtins
ignore = [
  "E203",  # let black handle spacing around ':'
  "B905",  # zip(strict=...) not needed for 3.11-
]
# Lint only these paths
src = ["boo.py", "boogr.py", "models.py"]
extend-exclude = ["docs/"]

[tool.ruff.isort]
known-first-party = ["boo"]

# ----- mypy -----
[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_ignores = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
no_implicit_optional = true
strict_equality = true
check_untyped_defs = true
show_error_codes = true
pretty = true

# When youâ€™re splitting files as you described:
#   boo.py (logic), boogr.py (Error/ErrorDialog), models.py (BaseModel subclasses)
[mypy-boogr]
# If ErrorDialog wraps UI-only bits, you can opt out of strict typing there:
ignore_errors = false

[mypy-models]
# Pydantic models often get dynamic attrs; keep them strict but allow plugins if needed.
ignore_errors = false
